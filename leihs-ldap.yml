# LDAP based authentication handler for Leihs

token:
  public_key: |
    -----BEGIN PUBLIC KEY-----
    ...
    -----END PUBLIC KEY-----

  private_key: |
    -----BEGIN PRIVATE KEY-----
    ...
    -----END PRIVATE KEY-----

  # How long should the issued success token be valid.
  # Shorter means more secure but also more likely to cause errors in case of slow networks.
  # Value in seconds.
  validity: 120

  # Do not fail if the token received from Leihs has expired.
  # Acepting expired Token is insecure!
  allow_expired: False

system:
  url: https://leihs.example.com

  # To generate an API token:
  # - In Leihs admin, go to “Users”
  # - Select a user
  # - Click on “User-Home in leihs/my”
  # - Click on “API-Tokens”
  # - Clixk “Add API-Token”
  api_token: 00000000-1111-2222-3333-444444444444

  auth:
    id: jwt
    name: LDAP Authentication
    description: null
    url: http://127.0.0.1:5000
    priority: 3
    email_match: .*

ldap:
   server: ldap.example.com
   port: 636
   user_dn: 'uid={username},ou=people,dc=example,dc=com'
   base_dn: 'ou=people,dc=example,dc=com'
   search_filter: '(uid={username})'
   userdata:
     email:
       # Use LDAP email data to overwrite the email field provided by Leihs.
       # This can be useful, for example, if you have several domains.
       overwrite: True

       # Falls back to LDAP email if no valid email is provided from Leihs.
       fallback: True

       # LDAP attribute to use as email address.
       field: mail

     name:
       # LDAP field specifying the user's family name
       family: sn

       # LDAP field specifying the user's given name
       given: givenName

ui:
  directories:
    # Path to a folder containing user interface templates if the built-in templates should not be used.
    # If you use this, make sure to provide all necessary templates.
    # Missing templates can cause unrecoverable errors during the login process.
    #template: /path/to/template/dir

    # Path to a folder containing static files used in the user interface.
    # This overwrites all built-in files.
    #static: /path/to/static/dir
